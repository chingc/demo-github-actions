name: Env Var

on:
  push:
  schedule:
    - cron: '0 0 1 * *'  # midnight every month (utc)
  workflow_dispatch:

env:
  JAN: 'January'
  FEB: 'February'
  MAR: 'March'

jobs:
  read_one:
    runs-on: ubuntu-latest
    env:
      RED: 'FF0000'
      GREEN: '00FF00'
      BLUE: '0000FF'

    steps:
      - name: Show months, colors, and numbers
        run: |
          echo "JAN is '${JAN}'"
          echo "FEB is '${FEB}'"
          echo "MAR is '${MAR}'"
          echo
          echo "RED is '${RED}'"
          echo "GREEN is '${GREEN}'"
          echo "BLUE is '${BLUE}'"
          echo
          echo "ONE is '${ONE}'"
          echo "TWO is '${TWO}'"
          echo "THREE is '${THREE}'"
        env:
          ONE: '1'
          TWO: '2'
          THREE: '3'

      - name: Show months and colors (numbers are in another scope and therefore undefined)
        run: |
          echo "JAN is '${JAN}'"
          echo "FEB is '${FEB}'"
          echo "MAR is '${MAR}'"
          echo
          echo "RED is '${RED}'"
          echo "GREEN is '${GREEN}'"
          echo "BLUE is '${BLUE}'"
          echo
          echo "ONE is '${ONE}'"
          echo "TWO is '${TWO}'"
          echo "THREE is '${THREE}'"

  read_two:
    runs-on: ubuntu-latest

    steps:
      - name: Show months (colors and numbers are in another scope and therefore undefined)
        run: |
          echo "JAN is '${JAN}'"
          echo "FEB is '${FEB}'"
          echo "MAR is '${MAR}'"
          echo
          echo "RED is '${RED}'"
          echo "GREEN is '${GREEN}'"
          echo "BLUE is '${BLUE}'"
          echo
          echo "ONE is '${ONE}'"
          echo "TWO is '${TWO}'"
          echo "THREE is '${THREE}'"

  write_one:
    runs-on: ubuntu-latest

    steps:
      - name: Overwrite months (takes effect in subsequent steps)
        run: |
          echo "JAN is '${JAN}'"
          echo "FEB is '${FEB}'"
          echo "MAR is '${MAR}'"
          echo
          echo "JAN=01" >> "${GITHUB_ENV}"
          echo "FEB=02" >> "${GITHUB_ENV}"
          echo "MAR=03" >> "${GITHUB_ENV}"
          echo "JAN is '${JAN}'"
          echo "FEB is '${FEB}'"
          echo "MAR is '${MAR}'"

      - name: Show updated months
        run: |
          echo "JAN is '${JAN}'"
          echo "FEB is '${FEB}'"
          echo "MAR is '${MAR}'"

      - name: Show updated months again
        run: |
          echo "JAN is '${JAN}'"
          echo "FEB is '${FEB}'"
          echo "MAR is '${MAR}'"

  write_two:
    runs-on: ubuntu-latest

    steps:
      - name: Changes made in other jobs are isolated
        run: |
          echo "JAN is '${JAN}'"
          echo "FEB is '${FEB}'"
          echo "MAR is '${MAR}'"

  pass_one:
    runs-on: ubuntu-latest

    steps:
      - name: Set environment variable (takes effect in subsequent steps)
        run: |
          echo "GREETING=Hello, World!" >> "${GITHUB_ENV}"
          echo "GREETING is '${GREETING}'"

      - name: Set multi-line environment variable (takes effect in subsequent steps)
        run: |
          {
            echo 'JSON_RESPONSE<<EOF'
            curl https://example.com
            echo EOF
          } >> "${GITHUB_ENV}"
          echo "JSON_RESPONSE is '${JSON_RESPONSE}'"

      - name: Show GREETING
        run: echo "GREETING is '${GREETING}'"

      - name: Show JSON_RESPONSE
        run: echo "JSON_RESPONSE is '${JSON_RESPONSE}'"

  pass_two:
    runs-on: ubuntu-latest
    outputs:
      FOO: ${{ steps.foobar.outputs.FOO }}
      BAR: ${{ steps.foobar.outputs.BAR }}

    steps:
      - name: GREETING and JSON_RESPONSE are in another scope and therefore undefined
        run: |
          echo "GREETING is '${GREETING}'"
          echo "JSON_RESPONSE is '${JSON_RESPONSE}'"

      - name: Set output parameters to pass values to another job
        id: foobar
        run: |
          echo "FOO=abc" >> "${GITHUB_OUTPUT}"
          echo "BAR=123" >> "${GITHUB_OUTPUT}"

  pass_three:
    runs-on: ubuntu-latest
    needs: pass_two

    steps:
      - name: Show FOO and BAR
        run: |
          echo "FOO is '${{ needs.pass_two.outputs.FOO }}'"
          echo "BAR is '${{ needs.pass_two.outputs.BAR }}'"
